---
name: build and push image
on:
  push:
    branches: [ master ]
env:
  IMAGE_NAME: what-time-is-it
  PROJECT_ID: bux-assignment-dpakhomov
  GITHUB_SHA: ${{ github.sha }}
  ZONE: europe-west4
  CLUSTER: k8s
  REGISTRY_HOSTNAME: europe-west4-docker.pkg.dev
  GIT_TAG: v0.1.0
jobs:
  build-push-gcr:
    name: Build image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: google-github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}
          project_id: ${{ env.PROJECT_ID }}
          export_default_credentials: true
      - name: Build image
        run: docker build -t $IMAGE_NAME:latest .
      - name: Configure client
        run: |-
          gcloud auth configure-docker $REGISTRY_HOSTNAME --quiet
      - name: Push image
        run: |-
          docker tag $IMAGE_NAME:latest $REGISTRY_HOSTNAME/$PROJECT_ID/wtii/$IMAGE_NAME:latest
          docker tag $IMAGE_NAME:latest $REGISTRY_HOSTNAME/$PROJECT_ID/wtii/$IMAGE_NAME:$GIT_TAG
          docker push $REGISTRY_HOSTNAME/$PROJECT_ID/wtii/$IMAGE_NAME:latest
          docker push $REGISTRY_HOSTNAME/$PROJECT_ID/wtii/$IMAGE_NAME:$GIT_TAG
      
  helm-deploy:
    name: Deploy image
    needs: build-push-gcr
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: google-github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}
          project_id: ${{ env.PROJECT_ID }}
          export_default_credentials: true
      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
      - name: Configure Kubernetes client
        run: gcloud container clusters get-credentials k8s
      - name: Deploy
        run: |
          gcloud container clusters get-credentials $CLUSTER \
            --zone $ZONE \
            --project $PROJECT_ID
          helm upgrade $IMAGE_NAME ./chart/ \
            --install \
            --set ingress.annotations.cert-manager\\.io/issuer="letsencrypt-prod" \
            --set image.repository=$REGISTRY_HOSTNAME/$PROJECT_ID/wtii/$IMAGE_NAME \
            --set image.tag=$GIT_TAG \
            --wait
          kubectl get services -o wide